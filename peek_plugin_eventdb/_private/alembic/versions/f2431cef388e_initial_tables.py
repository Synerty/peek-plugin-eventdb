"""initial tables

Peek Plugin Database Migration Script

Revision ID: f2431cef388e
Revises:
Create Date: 2020-05-19 11:07:24.961041

"""

# revision identifiers, used by Alembic.
revision = 'f2431cef388e'
down_revision = None
branch_labels = None
depends_on = None

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('EventDBModelSet',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('key', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('comment', sa.String(), nullable=True),
                    sa.Column('propsJson', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('key'),
                    sa.UniqueConstraint('name'),
                    schema='pl_eventdb'
                    )
    op.create_table('Setting',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='pl_eventdb'
                    )

    op.create_table('EventDBProperty',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('modelSetId', sa.Integer(), nullable=False),
                    sa.Column('key', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('isFreeText', sa.Boolean(), nullable=False),
                    sa.Column('comment', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['modelSetId'],
                                            ['pl_eventdb.EventDBModelSet.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('key'),
                    sa.UniqueConstraint('name'),
                    schema='pl_eventdb'
                    )
    op.create_table('SettingProperty',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('settingId', sa.Integer(), nullable=False),
                    sa.Column('key', sa.String(length=50), nullable=False),
                    sa.Column('type', sa.String(length=16), nullable=True),
                    sa.Column('int_value', sa.Integer(), nullable=True),
                    sa.Column('char_value', sa.String(length=50), nullable=True),
                    sa.Column('boolean_value', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['settingId'], ['pl_eventdb.Setting.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='pl_eventdb'
                    )
    op.create_index('idx_SettingProperty_settingId', 'SettingProperty', ['settingId'],
                    unique=False, schema='pl_eventdb')
    op.create_table('EventDBPropertyValue',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('value', sa.String(), nullable=False),
                    sa.Column('comment', sa.String(), nullable=True),
                    sa.Column('propertyId', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['propertyId'],
                                            ['pl_eventdb.EventDBProperty.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name'),
                    sa.UniqueConstraint('value'),
                    schema='pl_eventdb'
                    )
    # ### end Alembic commands ###

    # Create the table for the events
    op.create_table('EventDBEvent',
                    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
                    sa.Column('dateTime', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()),
                              nullable=False),
                    sa.Column('key', sa.String(), nullable=True),
                    sa.Column('modelSetId', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['modelSetId'], ['pl_eventdb.EventDBModelSet.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'dateTime'),
                    schema='pl_eventdb'
                    )

    # Convert the table to a timescale table
    # https://docs.timescale.com/latest/api#create_hypertable
    sql = '''
        SELECT create_hypertable('pl_eventdb."EventDBEvent"', 'dateTime');
    '''

    op.execute(sql)

    # Add the indexes
    # Because this is a partitioned table, we can't create this unique index
    op.create_index('idx_EventDBEvent_key', 'EventDBEvent', ['key'], unique=False,
                    schema='pl_eventdb')
    op.create_index('idx_EventDBEvent_modelSetId', 'EventDBEvent', ['modelSetId'], unique=False,
                    schema='pl_eventdb')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('EventDBPropertyValue', schema='pl_eventdb')
    op.drop_index('idx_EventDBEvent_modelSetId', table_name='EventDBEvent',
                  schema='pl_eventdb')
    op.drop_index('idx_EventDBEvent_importHash', table_name='EventDBEvent',
                  schema='pl_eventdb')
    op.drop_table('EventDBEvent', schema='pl_eventdb')
    op.drop_index('idx_SettingProperty_settingId', table_name='SettingProperty',
                  schema='pl_eventdb')
    op.drop_table('SettingProperty', schema='pl_eventdb')
    op.drop_table('EventDBProperty', schema='pl_eventdb')
    op.drop_table('Setting', schema='pl_eventdb')
    op.drop_table('EventDBModelSet', schema='pl_eventdb')
    # ### end Alembic commands ###
